@model SynchronicWorld.Models.Contribution

@{
    ViewBag.Title = "Add contribution";
    HttpCookie cookie = Request.Cookies["User"];

    if (cookie == null)
    {
        Response.Redirect(Url.Action("Index", "Home"));
    }
    else
    {
        ViewBag.Userid = cookie["UserId"];
    }
}

<h2>Add contribution</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contribution</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity)
                @Html.ValidationMessageFor(model => model.Quantity)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeContributionId, "Type of contribution", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeContributionId", String.Empty)
                @Html.ValidationMessageFor(model => model.TypeContributionId)
            </div>
        </div>

        <input data-val="true" name="UserId" type="hidden" value="@ViewBag.Userid" />
        <input data-val="true" name="EventId" type="hidden" value="@ViewBag.EventId" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-primary" />
            </div>
        </div>
    </div>
}