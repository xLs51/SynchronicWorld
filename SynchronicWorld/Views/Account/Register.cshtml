@model SynchronicWorld.Models.RegisterModel

@{
    ViewBag.Title = "Register";

    HttpCookie cookie = Request.Cookies["User"];

    if (cookie != null)
    {
        Response.Redirect(Url.Action("Index", "Home"));
    }
}

<h2>Create a New Account</h2>
<p>
    Use the form below to create a new account. 
</p>
<p>
    Passwords are required to be a minimum of @Membership.MinRequiredPasswordLength characters in length.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Account Information</legend>
            
            <div class="form-group">
                @Html.LabelFor(m => m.Username, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Username)
                    @Html.ValidationMessageFor(m => m.Username)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Name)
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.LastName)
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email)
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password)
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword)
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-primary" value="Register" />
                </div>
            </div>
        </fieldset>
    </div>
}
