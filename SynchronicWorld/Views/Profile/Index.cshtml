@model SynchronicWorld.Models.EditModel

@{
    ViewBag.Title = "Profile";
    HttpCookie cookie = Request.Cookies["User"];

    if (cookie == null)
    {
        Response.Redirect(Url.Action("Index", "Home"));
    }
    else
    {
        ViewBag.Username = cookie["UserName"];
    }
}

<h2>Edit you profile</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Profile @ViewBag.Username</h4>
        <hr />
       
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserId, new { value = "natureOfVisitField" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword)
                @Html.ValidationMessageFor(model => model.OldPassword)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword)
                @Html.ValidationMessageFor(model => model.NewPassword)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
